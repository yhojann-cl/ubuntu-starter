#!/bin/bash

# ██╗   ██╗██████╗ ██╗   ██╗███╗   ██╗████████╗██╗   ██╗        
# ██║   ██║██╔══██╗██║   ██║████╗  ██║╚══██╔══╝██║   ██║        
# ██║   ██║██████╔╝██║   ██║██╔██╗ ██║   ██║   ██║   ██║        
# ██║   ██║██╔══██╗██║   ██║██║╚██╗██║   ██║   ██║   ██║        
# ╚██████╔╝██████╔╝╚██████╔╝██║ ╚████║   ██║   ╚██████╔╝        
#  ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝    ╚═════╝         
#                                                               
#     ███████╗████████╗ █████╗ ██████╗ ████████╗███████╗██████╗ 
#     ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██╔══██╗
#     ███████╗   ██║   ███████║██████╔╝   ██║   █████╗  ██████╔╝
#     ╚════██║   ██║   ██╔══██║██╔══██╗   ██║   ██╔══╝  ██╔══██╗
#     ███████║   ██║   ██║  ██║██║  ██║   ██║   ███████╗██║  ██║
#     ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝
#                                          2023-06-01  22.04-LTS

# == GIT ==

# Instala los paquetes necesarios
sudo apt -y install git;

# Establece tu correo electrónico que aparecerá en los repositorios git
git config --global user.email 'mi-email@gmail.com';

# Establece tu nombre que aparecerá en los repositorios git
git config --global user.name 'Mi nombre';

# Establece la rama por defecto a trabajar.
# Se recomienda "master" pero puedes utilizar el que quieras.
git config --global init.defaultBranch 'master';


# == Herramientas varias ==

# Inspeccionador de memoria
sudo apt -y install scanmem gameconqueror;

# Analizador de archivos
sudo apt install -y binwalk;

# Cliente Sqlite
apt -y install -y sqlite3;

# Cliente PostgreSQL
sudo apt -y install postgresql-client postgresql-client-common;

# Cliente SQL múltiples protocolos
flatpak install flathub io.beekeeperstudio.Studio;

# Herramientas varias
sudo apt -y install \
  cadaver tcpdump ssldump medusa hydra nmap ncat crunch adb wireshark mitmproxy;


# == Editor de código ==

# Incrementa el número de archivos que el sistema puede monitorear.
# Requerido para editores que monitorean archivos en tiempo real como Atom y
# Visual Studio Code.
echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf;
sudo sysctl -p;

# Visual Studio Code
flatpak install -y com.visualstudio.code;
# flatpak install -y io.atom.Atom;

# == Contenedores y herramientas ==

# Instala las cabeceras de Linux
sudo apt -y install linux-headers-generic;

# Instala docker nativo.
sudo apt -y install docker.io;

  # == Kali ==
  
  # Descarga de la imagen de kali (50mb)
  sudo docker pull kalilinux/kali-last-release:latest;
  
  # Creación y ejecución del contenedor de kali
  # Abre el puerto 4444 para utilizar en caso de ser necesario para una shell
  # inversa.
  sudo docker run --name kali \
    --net bridge -p 4444:4444 \
    -it kalilinux/kali-last-release:latest \
    /bin/bash;
  
  # Dentro de la shell enjaulada de kali en Ubuntu:
  # apt -y update;
  # apt -y upgrade;
  # apt -y install kali-linux-large;
  # apt -y install dirsearch ncat tmux;
  # pip install frida-tools;

  # Al salir, para volver a ejecutar el mismo entorno de kali
  sudo docker start kali -i;
  
  # Para eliminar el contenedor
  sudo docker rm kali;
  
  # Para eliminar la imagen
  sudo docker rmi kalilinux/kali-last-release:latest;
  
  
# == MITMPROXY ==

  curl --proxy 127.0.0.1:8080 http://mitm.it/cert/pem > ~/.mitmproxy/mitmproxy-ca-cert.pem;
  sudo keytool -importcert -alias mitmproxy -trustcacerts -file ~/.mitmproxy/mitmproxy-ca-cert.pem;
  
